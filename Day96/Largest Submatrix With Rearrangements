class Solution {
public:
    int largestSubmatrix(vector<vector<int>>& matrix) {
     int m = matrix.size();
        int n = matrix[0].size();

        // Convert the matrix into a histogram
        for (int i = 1; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                if (matrix[i][j] == 1) {
                    matrix[i][j] += matrix[i - 1][j];
                }
            }
        }

        int result = 0;

        // Calculate the maximum area rectangle for each row
        for (int i = 0; i < m; ++i) {
            vector<int> heights(matrix[i].begin(), matrix[i].end());
            sort(heights.begin(), heights.end(), greater<int>());

            for (int j = 0; j < n; ++j) {
                result = max(result, heights[j] * (j + 1));
            }
        }

        return result;   
    }
};
